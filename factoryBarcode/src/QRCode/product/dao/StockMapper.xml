<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="QRCode.product.dao.StockMapper">
  <resultMap id="BaseResultMap" type="QRCode.product.model.Stock">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="name2" jdbcType="VARCHAR" property="name2" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="TIMESTAMP" property="updateUser" />
    <result column="in_price" jdbcType="DECIMAL" property="inPrice" />
    <result column="sale_price" jdbcType="DECIMAL" property="salePrice" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="company" jdbcType="INTEGER" property="company" />
    <result column="produce_date" jdbcType="DATE" property="produceDate" />
    <result column="effDays" jdbcType="INTEGER" property="effdays" />
    <result column="type1" jdbcType="INTEGER" property="type1" />
    <result column="type2" jdbcType="INTEGER" property="type2" />
    <result column="remainShare" jdbcType="BIGINT" property="remainshare" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, barcode, name2, create_time, create_user, update_time, update_user, in_price, 
    sale_price, remark, company, produce_date, effDays, type1, type2, remainShare
  </sql>
  <select id="selectByExample" parameterType="QRCode.product.model.StockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="QRCode.product.model.StockExample">
    delete from stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="QRCode.product.model.Stock">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stock (name, barcode, name2, 
      create_time, create_user, update_time, 
      update_user, in_price, sale_price, 
      remark, company, produce_date, 
      effDays, type1, type2, 
      remainShare)
    values (#{name,jdbcType=VARCHAR}, #{barcode,jdbcType=VARCHAR}, #{name2,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=TIMESTAMP}, #{inPrice,jdbcType=DECIMAL}, #{salePrice,jdbcType=DECIMAL}, 
      #{remark,jdbcType=VARCHAR}, #{company,jdbcType=INTEGER}, #{produceDate,jdbcType=DATE}, 
      #{effdays,jdbcType=INTEGER}, #{type1,jdbcType=INTEGER}, #{type2,jdbcType=INTEGER}, 
      #{remainshare,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="QRCode.product.model.Stock">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="name2 != null">
        name2,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="inPrice != null">
        in_price,
      </if>
      <if test="salePrice != null">
        sale_price,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="produceDate != null">
        produce_date,
      </if>
      <if test="effdays != null">
        effDays,
      </if>
      <if test="type1 != null">
        type1,
      </if>
      <if test="type2 != null">
        type2,
      </if>
      <if test="remainshare != null">
        remainShare,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null">
        #{name2,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=TIMESTAMP},
      </if>
      <if test="inPrice != null">
        #{inPrice,jdbcType=DECIMAL},
      </if>
      <if test="salePrice != null">
        #{salePrice,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=INTEGER},
      </if>
      <if test="produceDate != null">
        #{produceDate,jdbcType=DATE},
      </if>
      <if test="effdays != null">
        #{effdays,jdbcType=INTEGER},
      </if>
      <if test="type1 != null">
        #{type1,jdbcType=INTEGER},
      </if>
      <if test="type2 != null">
        #{type2,jdbcType=INTEGER},
      </if>
      <if test="remainshare != null">
        #{remainshare,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="QRCode.product.model.StockExample" resultType="java.lang.Long">
    select count(*) from stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stock
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.barcode != null">
        barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.name2 != null">
        name2 = #{record.name2,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inPrice != null">
        in_price = #{record.inPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.salePrice != null">
        sale_price = #{record.salePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=INTEGER},
      </if>
      <if test="record.produceDate != null">
        produce_date = #{record.produceDate,jdbcType=DATE},
      </if>
      <if test="record.effdays != null">
        effDays = #{record.effdays,jdbcType=INTEGER},
      </if>
      <if test="record.type1 != null">
        type1 = #{record.type1,jdbcType=INTEGER},
      </if>
      <if test="record.type2 != null">
        type2 = #{record.type2,jdbcType=INTEGER},
      </if>
      <if test="record.remainshare != null">
        remainShare = #{record.remainshare,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stock
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      barcode = #{record.barcode,jdbcType=VARCHAR},
      name2 = #{record.name2,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=TIMESTAMP},
      in_price = #{record.inPrice,jdbcType=DECIMAL},
      sale_price = #{record.salePrice,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=INTEGER},
      produce_date = #{record.produceDate,jdbcType=DATE},
      effDays = #{record.effdays,jdbcType=INTEGER},
      type1 = #{record.type1,jdbcType=INTEGER},
      type2 = #{record.type2,jdbcType=INTEGER},
      remainShare = #{record.remainshare,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="QRCode.product.model.Stock">
    update stock
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null">
        name2 = #{name2,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=TIMESTAMP},
      </if>
      <if test="inPrice != null">
        in_price = #{inPrice,jdbcType=DECIMAL},
      </if>
      <if test="salePrice != null">
        sale_price = #{salePrice,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=INTEGER},
      </if>
      <if test="produceDate != null">
        produce_date = #{produceDate,jdbcType=DATE},
      </if>
      <if test="effdays != null">
        effDays = #{effdays,jdbcType=INTEGER},
      </if>
      <if test="type1 != null">
        type1 = #{type1,jdbcType=INTEGER},
      </if>
      <if test="type2 != null">
        type2 = #{type2,jdbcType=INTEGER},
      </if>
      <if test="remainshare != null">
        remainShare = #{remainshare,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="QRCode.product.model.Stock">
    update stock
    set name = #{name,jdbcType=VARCHAR},
      barcode = #{barcode,jdbcType=VARCHAR},
      name2 = #{name2,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=TIMESTAMP},
      in_price = #{inPrice,jdbcType=DECIMAL},
      sale_price = #{salePrice,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      company = #{company,jdbcType=INTEGER},
      produce_date = #{produceDate,jdbcType=DATE},
      effDays = #{effdays,jdbcType=INTEGER},
      type1 = #{type1,jdbcType=INTEGER},
      type2 = #{type2,jdbcType=INTEGER},
      remainShare = #{remainshare,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>


</mapper>