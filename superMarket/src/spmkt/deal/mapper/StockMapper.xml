<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spmkt.deal.mapper.StockMapper">
  <resultMap id="BaseResultMap" type="spmkt.deal.model.Stock">
    <result column="filePath" jdbcType="VARCHAR" property="filepath" />
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="sellState" jdbcType="VARCHAR" property="sellstate" />
    <result column="cName1" jdbcType="VARCHAR" property="cname1" />
    <result column="cName2" jdbcType="VARCHAR" property="cname2" />
    <result column="inPrice" jdbcType="DECIMAL" property="inprice" />
    <result column="inDate" jdbcType="DATE" property="indate" />
    <result column="sellingPrice" jdbcType="DECIMAL" property="sellingprice" />
    <result column="outPrice" jdbcType="DECIMAL" property="outprice" />
    <result column="outDate" jdbcType="DATE" property="outdate" />
    <result column="factory" jdbcType="VARCHAR" property="factory" />
    <result column="barcode" jdbcType="VARCHAR" property="barcode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    filePath, id, sellState, cName1, cName2, inPrice, inDate, sellingPrice, outPrice, 
    outDate, factory, barcode
  </sql>
  <select id="selectByExample" parameterType="spmkt.deal.model.StockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from stock_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="spmkt.deal.model.StockExample">
    delete from stock_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="spmkt.deal.model.Stock">
    insert into stock_info (filePath, sellState, 
      cName1, cName2, inPrice, 
      inDate, sellingPrice, outPrice, 
      outDate, factory, barcodeu888888888888i
      )
    values (#{filepath,jdbcType=VARCHAR}, #{sellstate,jdbcType=VARCHAR}, 
      #{cname1,jdbcType=VARCHAR}, #{cname2,jdbcType=VARCHAR}, #{inprice,jdbcType=DECIMAL}, 
      #{indate,jdbcType=DATE}, #{sellingprice,jdbcType=DECIMAL}, #{outprice,jdbcType=DECIMAL}, 
      #{outdate,jdbcType=DATE}, #{factory,jdbcType=VARCHAR}, #{barcode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="spmkt.deal.model.Stock">
    insert into stock_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="filepath != null">
        filePath,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="sellstate != null">
        sellState,
      </if>
      <if test="cname1 != null">
        cName1,
      </if>
      <if test="cname2 != null">
        cName2,
      </if>
      <if test="inprice != null">
        inPrice,
      </if>
      <if test="indate != null">
        inDate,
      </if>
      <if test="sellingprice != null">
        sellingPrice,
      </if>
      <if test="outprice != null">
        outPrice,
      </if>
      <if test="outdate != null">
        outDate,
      </if>
      <if test="factory != null">
        factory,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="filepath != null">
        #{filepath,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sellstate != null">
        #{sellstate,jdbcType=VARCHAR},
      </if>
      <if test="cname1 != null">
        #{cname1,jdbcType=VARCHAR},
      </if>
      <if test="cname2 != null">
        #{cname2,jdbcType=VARCHAR},
      </if>
      <if test="inprice != null">
        #{inprice,jdbcType=DECIMAL},
      </if>
      <if test="indate != null">
        #{indate,jdbcType=DATE},
      </if>
      <if test="sellingprice != null">
        #{sellingprice,jdbcType=DECIMAL},
      </if>
      <if test="outprice != null">
        #{outprice,jdbcType=DECIMAL},
      </if>
      <if test="outdate != null">
        #{outdate,jdbcType=DATE},
      </if>
      <if test="factory != null">
        #{factory,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="spmkt.deal.model.StockExample" resultType="java.lang.Integer">
    select count(*) from stock_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stock_info
    <set>
      <if test="record.filepath != null">
        filePath = #{record.filepath,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.sellstate != null">
        sellState = #{record.sellstate,jdbcType=VARCHAR},
      </if>
      <if test="record.cname1 != null">
        cName1 = #{record.cname1,jdbcType=VARCHAR},
      </if>
      <if test="record.cname2 != null">
        cName2 = #{record.cname2,jdbcType=VARCHAR},
      </if>
      <if test="record.inprice != null">
        inPrice = #{record.inprice,jdbcType=DECIMAL},
      </if>
      <if test="record.indate != null">
        inDate = #{record.indate,jdbcType=DATE},
      </if>
      <if test="record.sellingprice != null">
        sellingPrice = #{record.sellingprice,jdbcType=DECIMAL},
      </if>
      <if test="record.outprice != null">
        outPrice = #{record.outprice,jdbcType=DECIMAL},
      </if>
      <if test="record.outdate != null">
        outDate = #{record.outdate,jdbcType=DATE},
      </if>
      <if test="record.factory != null">
        factory = #{record.factory,jdbcType=VARCHAR},
      </if>
      <if test="record.barcode != null">
        barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stock_info
    set filePath = #{record.filepath,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=BIGINT},
      sellState = #{record.sellstate,jdbcType=VARCHAR},
      cName1 = #{record.cname1,jdbcType=VARCHAR},
      cName2 = #{record.cname2,jdbcType=VARCHAR},
      inPrice = #{record.inprice,jdbcType=DECIMAL},
      inDate = #{record.indate,jdbcType=DATE},
      sellingPrice = #{record.sellingprice,jdbcType=DECIMAL},
      outPrice = #{record.outprice,jdbcType=DECIMAL},
      outDate = #{record.outdate,jdbcType=DATE},
      factory = #{record.factory,jdbcType=VARCHAR},
      barcode = #{record.barcode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id ="queryStockByBarcode" parameterType="java.lang.String" resultMap="BaseResultMap">
      select * from stock_info where barcode =#{barcode} 
  </select>
</mapper>